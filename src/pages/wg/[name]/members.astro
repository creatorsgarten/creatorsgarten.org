---
import MainHorizontalPadding from '$components/mainHorizontalPadding.astro'
import { contentsgarten } from '$constants/contentsgarten'
import Layout from '$layouts/wiki.astro'

const { name } = Astro.params
if (!name) {
  return new Response(null, {
    status: 404,
    statusText: 'Not found',
  })
}

// Normalize the name to ensure it's lowercase
const groupName = name.toLowerCase()

// Get backend client from Astro.locals
const backend = Astro.locals.backend

// Get the authenticated user
const user = Astro.locals.user

// Fetch the working group by name
let group: Awaited<
  ReturnType<typeof backend.workingGroups.getByName.query>
> | null = null
let fullGroupData: any = null // For authenticated members only
let wikiPageExists = false
let error: string | null = null
let memberCounts = { admins: 0, members: 0, total: 0 }
let isUserAdmin = false
let isUserMember = false
let membersList: any[] = []

try {
  // Check if the group exists - use the public endpoint first
  group = await backend.workingGroups.getByName.query({ name: groupName })

  // If the group exists, get member counts from the public endpoint
  if (group) {
    memberCounts = group.memberCounts

    // If user is logged in, check membership status
    if (user) {
      // Check if current user is a member or admin
      isUserMember = await backend.workingGroups.isUserMember.query({
        groupId: group.id,
      })

      // If user is a member, get full group data including member list
      if (isUserMember) {
        fullGroupData = await backend.workingGroups.getByNameWithRole.query({
          name: groupName,
        })

        // Get member list
        const membersResult = await backend.workingGroups.getMembers.query({
          groupId: group.id,
        })
        membersList = membersResult.members

        // Check admin status from the full data
        isUserAdmin = fullGroupData.isCurrentUserAdmin
      }
    }
  } else {
    // If group doesn't exist, check if the wiki page exists
    wikiPageExists = await contentsgarten()
      .view.query({
        pageRef: `WorkingGroups/${groupName}`,
      })
      .then(r => !!r.file?.revision)
  }
} catch (e) {
  console.error('Error fetching working group:', e)
  error = e instanceof Error ? e.message : 'Unknown error'
}

// Handle group creation
let createError: string | null = null
let isCreating = false

if (Astro.request.method === 'POST') {
  isCreating = true

  try {
    // Ensure user is authenticated
    if (!user) {
      createError = 'You must be logged in to create a working group'
    } else if (!wikiPageExists) {
      createError =
        'A corresponding Wiki page must exist before creating this working group'
    } else {
      // Create the working group
      const createdGroup = await backend.workingGroups.create.mutate({
        name: groupName,
      })

      // After creation, get the group data again
      group = await backend.workingGroups.getByName.query({ name: groupName })
      memberCounts = group?.memberCounts || { admins: 1, members: 0, total: 1 }

      // Set membership status
      isUserAdmin = true
      isUserMember = true
    }
  } catch (e) {
    console.error('Error creating working group:', e)
    createError = e instanceof Error ? e.message : 'Unknown error'
  }

  isCreating = false
}

const pageRef = `WorkingGroups/${groupName}`
const title = group ? `${group.name} Working Group` : `${name} Working Group`
---

<Layout title={title}>
  <MainHorizontalPadding>
    <div class="py-8">
      <h1 class="mb-6 text-3xl font-bold">{title}</h1>

      {
        error && (
          <div
            class="mb-6 border-l-4 border-red-500 bg-red-100 p-4 text-red-700"
            role="alert"
          >
            <p>{error}</p>
          </div>
        )
      }

      {
        group ? (
          <div class="rounded-lg bg-white p-6 shadow-md">
            <h2 class="mb-4 text-xl font-semibold">Working Group Details</h2>

            <div class="mb-6">
              <p>
                Wiki Page:{' '}
                <a
                  href={`/wiki/${pageRef}`}
                  class="text-blue-600 hover:underline"
                >
                  {pageRef}
                </a>
              </p>
              <p>Created: {new Date(group.createdAt).toLocaleDateString()}</p>
            </div>

            <div class="mb-6 grid grid-cols-1 gap-4 md:grid-cols-3">
              <div class="rounded bg-gray-50 p-4 text-center">
                <div class="text-2xl font-bold">{memberCounts.admins}</div>
                <div class="text-gray-600">Admins</div>
              </div>
              <div class="rounded bg-gray-50 p-4 text-center">
                <div class="text-2xl font-bold">{memberCounts.members}</div>
                <div class="text-gray-600">Members</div>
              </div>
              <div class="rounded bg-gray-50 p-4 text-center">
                <div class="text-2xl font-bold">{memberCounts.total}</div>
                <div class="text-gray-600">Total</div>
              </div>
            </div>

            {/* Show member list if user is a member */}
            {isUserMember && (
              <div class="mb-6">
                <h3 class="mb-2 text-lg font-semibold">Members</h3>
                <div class="overflow-x-auto rounded border border-gray-200">
                  <pre class="p-4 text-sm">
                    {JSON.stringify(membersList, null, 2)}
                  </pre>
                </div>
              </div>
            )}

            <div class="flex items-center justify-between">
              <a
                href={`/wiki/${pageRef}`}
                class="inline-flex items-center rounded bg-gray-100 px-4 py-2 transition hover:bg-gray-200"
              >
                View Wiki Page
              </a>

              {user && (
                <div>
                  {isUserAdmin ? (
                    <a
                      href={`/wg/${groupName}/invite`}
                      class="rounded bg-purple-600 px-4 py-2 text-white transition hover:bg-purple-700"
                    >
                      Invite Members
                    </a>
                  ) : !isUserMember ? null : (
                    <span class="rounded bg-green-100 px-4 py-2 text-green-800">
                      You are a member
                    </span>
                  )}
                </div>
              )}
            </div>
          </div>
        ) : (
          <div class="rounded-lg bg-white p-6 shadow-md">
            <h2 class="mb-4 text-xl font-semibold">Working Group Not Found</h2>

            {wikiPageExists ? (
              <div>
                <p class="mb-4">
                  This working group hasn't been set up yet, but a corresponding
                  Wiki page exists. Would you like to create it?
                </p>

                {user ? (
                  <form method="POST" class="mt-6">
                    {createError && (
                      <div
                        class="mb-4 border-l-4 border-red-500 bg-red-100 p-4 text-red-700"
                        role="alert"
                      >
                        <p>{createError}</p>
                      </div>
                    )}

                    <button
                      type="submit"
                      class="rounded bg-blue-600 px-4 py-2 text-white transition hover:bg-blue-700"
                      disabled={isCreating}
                    >
                      {isCreating ? 'Creating...' : 'Create Working Group'}
                    </button>
                  </form>
                ) : (
                  <div class="border-l-4 border-yellow-400 bg-yellow-50 p-4">
                    <p>
                      You need to{' '}
                      <a href="/login" class="text-blue-600 hover:underline">
                        sign in
                      </a>{' '}
                      to create a working group.
                    </p>
                  </div>
                )}
              </div>
            ) : (
              <div class="border-l-4 border-yellow-400 bg-yellow-50 p-4">
                <p>
                  Before creating this working group, you need to create a Wiki
                  page at
                  <strong>WorkingGroups/{name}</strong>.
                  <a
                    href={`/wiki/${pageRef}/editor`}
                    class="text-blue-600 hover:underline"
                  >
                    Create the Wiki page
                  </a>
                </p>
              </div>
            )}
          </div>
        )
      }
    </div>
  </MainHorizontalPadding>
</Layout>
