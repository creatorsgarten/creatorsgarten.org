---
import Head from '$commons/head.astro'
import { UsernameFormWrapper } from '$components/auth/usernameForm'
import Breadcrumb from '$components/breadcrumb.astro'
import { Connections } from '$components/connections'
import UserCard from '$dashboard/userCard.astro'
import BaseLayout from '$layouts/base.astro'
import { Icon } from 'react-iconify-icon-wrapper'
import ProfileEditor from '$components/dashboard/profiles/profileEditor.astro'
import { InfoBox } from '$components/infoBox'

const { user } = Astro.locals
if (!user) {
  return Astro.redirect(
    '/auth/login?dest=' +
      encodeURIComponent(Astro.url.pathname + Astro.url.search)
  )
}

const hasGithubConnection = Boolean(user?.connections?.github)
let message = ''

// Handle POST request for username reservation
if (Astro.request.method === 'POST') {
  try {
    const formData = await Astro.request.formData()
    const username = formData.get('username')

    if (typeof username === 'string') {
      const result = await Astro.locals.backend.auth.reserveUsername.mutate({
        username,
      })

      // Refresh cookies with new token
      if (result.idToken) {
        Astro.cookies.set('authgarten', result.idToken, {
          maxAge: 60 * 60 * 12, // 12 hours
          httpOnly: true,
          secure: import.meta.env.PROD,
          path: '/',
          sameSite: 'lax',
        })
      }

      // Redirect to refresh the page with the new username
      return Astro.redirect('/dashboard/profile?success=true')
    }
  } catch (error) {
    console.error('Error reserving username:', error)
    message =
      error instanceof Error ? error.message : 'Failed to reserve username'
    // Continue rendering the page with the error message
  }
}

// Check for success/error messages in URL
const urlSuccess = Astro.url.searchParams.get('success')
const urlError = Astro.url.searchParams.get('error')
const profileSuccess = urlSuccess === 'profile-updated'
const profileError = urlError || ''
const usernameSuccess = urlSuccess === 'true'
---

<Head title="Profile & Connections | Dashboard" />

<BaseLayout class="mx-auto mt-8 max-w-7xl space-y-6 *:px-6">
  <Breadcrumb
    parents={[{ title: 'Dashboard', href: '/dashboard' }]}
    title="Profile & Connections"
  />

  {
    usernameSuccess && !user.username && (
      <div class="mx-auto mb-4 max-w-2xl">
        <InfoBox client:load type="success" title="Success!">
          <p>Your username has been reserved successfully.</p>
        </InfoBox>
      </div>
    )
  }

  {
    message && (
      <div class="mx-auto mb-4 max-w-2xl">
        <InfoBox client:load type="error" title="Error">
          <p>{message}</p>
        </InfoBox>
      </div>
    )
  }

  <div class="mx-auto max-w-2xl lg:max-w-7xl space-y-6">
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
      <!-- Left column (1/2) -->
      <div class="space-y-6">
        <div class="rounded-2xl border border-neutral-300 bg-white p-6">
          <h2 class="mb-4 text-lg font-medium">My Profile</h2>
          <UserCard user={user} />

          <div class="mt-6 border-t pt-6">
            <h2 class="mb-4 text-lg font-medium">Profile Information</h2>
            <div class="grid gap-4">
              <div>
                <p class="text-sm text-neutral-600">Name</p>
                <p>{user.name}</p>
              </div>
              <div>
                <p class="text-sm text-neutral-600">Email</p>
                <p>{user.email}</p>
              </div>
              <div>
                <p class="text-sm text-neutral-600">User ID</p>
                <p class="font-mono text-sm">{user.sub}</p>
              </div>
              {
                user.username && (
                  <div>
                    <p class="text-sm text-neutral-600">Username</p>
                    <p class="font-mono">{user.username}</p>
                  </div>
                )
              }
            </div>

            <div class="mt-6">
              <InfoBox client:load type="info">
                <p>
                  Your profile information is imported from Eventpop. To update
                  your profile information:
                </p>
                <div class="mt-2">
                  <a
                    href="https://www.eventpop.me/users/edit"
                    target="_blank"
                    rel="noopener noreferrer"
                    class="inline-flex items-center rounded-md bg-blue-600 px-3 py-2 text-sm font-medium text-white hover:bg-blue-700"
                  >
                    <Icon
                      icon="heroicons:pencil-square"
                      className="mr-1 h-4 w-4"
                    />
                    Update Profile on Eventpop
                  </a>
                </div>
                <p class="mt-2 text-xs text-blue-600">
                  After editing your profile, the changes will be reflected on
                  your account the next time you sign in.
                </p>
              </InfoBox>
            </div>
          </div>
        </div>

        <div class="rounded-2xl border border-neutral-300 bg-white p-6">
          {
            user.username ? (
              <ProfileEditor 
                username={user.username} 
                success={profileSuccess}
                error={profileError}
              />
            ) : (
              <UsernameFormWrapper
                client:load
                initialUsername={user.username}
                hasGithub={hasGithubConnection}
                formAction="/dashboard/profile"
              />
            )
          }
        </div>
      </div>

      <!-- Right column (1/2) -->
      <div>
        <div class="rounded-2xl border border-neutral-300 bg-white p-6 h-full">
          <h2 class="mb-4 text-lg font-medium">Connections</h2>
          <p class="mb-6 text-neutral-700">
            Connect your accounts to access additional features and services. When
            you join a working group, these connections help group leads know which
            usernames to use when inviting you to repositories or services.
          </p>
          <Connections connections={user.connections} />
        </div>
      </div>
    </div>
  </div>
</BaseLayout>


