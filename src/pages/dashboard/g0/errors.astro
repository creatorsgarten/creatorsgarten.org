---
import { G0_HOSTNAME, G0_CREDENTIALS } from 'astro:env/server'

import BaseLayout from '$layouts/base.astro'
import { getServiceAccountIdToken } from '$backend/gardenGate/getServiceAccountIdToken'

interface Log {
  _id: string
  time: string
  message: string
}

let { granted } = await Astro.locals.backend.gardenGate.checkAccess.query()

if (!granted)
  return new Response(undefined, {
    status: 403,
  })

const idToken = await getServiceAccountIdToken(
  'https://github.com/creatorsgarten/garden-gate',
  G0_CREDENTIALS
)
const gardenZeroResponse: Log[] = await fetch(G0_HOSTNAME + '/error-log', {
  method: 'GET',
  headers: {
    'Content-Type': 'application/json',
    Accept: 'application/json',
    Authorization: 'Bearer ' + idToken,
  },
}).then(o => {
  if (o.ok) return o.json()
  else throw new Error('Error fetching error log')
})
---

<BaseLayout class="mx-auto max-w-7xl space-y-6 *:px-6">
  {
    gardenZeroResponse.map(log => (
      <div class="space-y-4 rounded-xl bg-red-100 p-4 text-red-700">
        <p class="font-medium">{log.time}</p>
        <pre class="break-all text-sm">{log.message}</pre>
      </div>
    ))
  }
</BaseLayout>
