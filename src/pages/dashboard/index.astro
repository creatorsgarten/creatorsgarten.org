---
import Head from '$commons/head.astro'
import PortalCard from '$dashboard/portalCard.astro'
import UserCard from '$dashboard/userCard.astro'
import { getWebsiteConfig } from '$functions/getWebsiteConfig'
import BaseLayout from '$layouts/base.astro'

const { backend, user } = Astro.locals
if (!user) return Astro.redirect('/')

// Get data for badges/indicators
const joinedEvents = await backend.events.getJoinedEvents.query()
const { granted: hasGardenZeroAccess } =
  await backend.gardenGate.checkAccess.query()

// Get services from website config
const websiteConfig = await getWebsiteConfig()
const services = websiteConfig?.integrations.services ?? []
---

<Head title="Dashboard" />

<BaseLayout class="mx-auto mt-8 max-w-7xl space-y-8 *:px-6">
  <div class="mx-auto mb-4 max-w-lg">
    <UserCard user={user} />

    <div class="mt-4 text-center">
      <a
        href="/auth/logout"
        class="text-sm text-red-600 hover:text-red-800 hover:underline"
        >Sign out</a
      >
    </div>
  </div>

  <div class="mx-auto grid max-w-5xl gap-4 sm:grid-cols-2 lg:grid-cols-3">
    <PortalCard
      title="Profile & Connections"
      description="Manage your profile and service connections"
      icon="heroicons:user-circle"
      href="/dashboard/profile"
    />

    <PortalCard
      title="Tickets"
      description="View your event tickets from Eventpop"
      icon="heroicons:ticket"
      href="/dashboard/tickets"
      badge={joinedEvents.length || undefined}
    />

    {
      services.map(service => (
        <PortalCard
          title={service.name}
          description={service.description}
          icon={service.icon || 'heroicons:link'}
          href={service.url}
          image={service.image}
        />
      ))
    }

    {
      hasGardenZeroAccess && (
        <PortalCard
          title="Garden Zero"
          description="Access and manage Garden Zero membership"
          icon="heroicons:key"
          href="/dashboard/g0"
        />
      )
    }
  </div>
</BaseLayout>
