---
import Head from '$commons/head.astro'
import Breadcrumb from '$components/breadcrumb.astro'
import CFImage from '$components/cfImage.astro'
import { getEvents } from '$functions/getEvents'
import BaseLayout from '$layouts/base.astro'
import dayjs from 'dayjs'
import { Icon } from 'react-iconify-icon-wrapper'

import type { Event } from '$functions/getEvents'

const { backend, user } = Astro.locals
if (!user) return Astro.redirect('/')

const eventIds = await backend.events.getJoinedEvents.query()
const events = await getEvents()

const selectedEvents = eventIds
  .map(({ id, code, ticketId }) => ({
    data: events.find(event => event.eventpopId === id) as Event,
    code,
    ticketId,
  }))
  .filter(o => o.data !== undefined)
  .sort((a, b) => b.data.date.unix() - a.data.date.unix())
---

<Head title="Tickets | Dashboard" />

<BaseLayout class="mx-auto mt-8 max-w-7xl space-y-6 *:px-6">
  <Breadcrumb
    parents={[{ title: 'Dashboard', href: '/dashboard' }]}
    title="My Tickets"
  />

  <div class="mx-auto max-w-2xl">
    <div class="rounded-2xl border border-neutral-300 bg-white p-6">
      {
        selectedEvents.length > 0 ? (
          <div>
            <div class="grid gap-4 md:grid-cols-2">
              {selectedEvents.map(event => (
                <a
                  href={`https://www.eventpop.me/tickets/${event.ticketId}#:~:text=E%2dTicket`}
                >
                  <div class="flex h-24 overflow-hidden rounded-md bg-linear-to-br from-neutral-700 to-neutral-800">
                    <div class="aspect-square h-full shrink-0">
                      <CFImage
                        src={event.data.image}
                        width={300}
                        ratio={1}
                        alt="cover"
                        class={`h-full w-auto ${
                          dayjs(event.data.endDate ?? event.data.date).isAfter(
                            dayjs()
                          )
                            ? ''
                            : 'grayscale'
                        }`}
                      />
                    </div>
                    <div class="flex w-full flex-col justify-between px-4 py-2">
                      <h1 class="line-clamp-2 font-medium text-white">
                        {event.data.name}
                      </h1>
                      <p class="inline-flex items-center justify-end text-right text-xs text-gray-200">
                        Ref:{' '}
                        <span class="ml-1 rounded-sm bg-gray-200 px-0.5 transition hover:bg-transparent">
                          {event.code}
                        </span>
                      </p>
                    </div>
                  </div>
                </a>
              ))}
            </div>
          </div>
        ) : (
          <div class="py-8 text-center">
            <div class="mb-3 text-4xl text-neutral-400">
              <Icon icon="heroicons:ticket" />
            </div>
            <h3 class="mb-1 text-lg font-medium">No Tickets Found</h3>
            <p class="text-neutral-600">
              You haven't registered for any events yet.
            </p>
          </div>
        )
      }
    </div>
  </div>
</BaseLayout>
