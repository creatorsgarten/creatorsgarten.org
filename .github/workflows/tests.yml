name: Tests
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  type-safety:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: pnpm
        uses: pnpm/action-setup@v4
      - name: node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
      - name: install
        run: pnpm -r i --frozen-lockfile
      - name: sync
        run: pnpm astro sync
      - name: check-tsc
        run: pnpm tsc
      - name: check-astro
        run: pnpm astro check

  e2e:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: pnpm
        uses: pnpm/action-setup@v4
      - name: node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
      - name: install
        run: pnpm -r i --frozen-lockfile
      - name: playwright-version
        run: |
          PLAYWRIGHT_VERSION=$(pnpm ls @playwright/test | grep @playwright | sed 's/@playwright\/test //')
          echo "Playwright's Version: $PLAYWRIGHT_VERSION"
          echo "PLAYWRIGHT_VERSION=$PLAYWRIGHT_VERSION" >> $GITHUB_ENV
      - name: playwright-cache
        id: cache-playwright
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: playwright-browsers-${{ env.PLAYWRIGHT_VERSION }}
      - name: playwright-install
        if: steps.cache-playwright.outputs.cache-hit != 'true'
        run: pnpm playwright install --with-deps
      - name: env
        run: cp .env.example .env
      - name: tests
        env:
          PORT: 3000
        run: pnpm playwright test
      - name: upload
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
